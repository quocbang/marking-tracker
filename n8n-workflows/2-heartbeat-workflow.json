{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "marking-log/heartbeat",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "0a3ed6da-fd1e-43c7-abbf-f70180b98ede",
      "name": "Webhook Heartbeat",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        -1100,
        40
      ],
      "webhookId": "heartbeat-session"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "sessionId",
              "name": "sessionId",
              "value": "={{ $jmespath($json, 'body.sessionId') }}",
              "type": "string"
            },
            {
              "id": "ts",
              "name": "ts",
              "value": "={{ $jmespath($json, 'body.ts') }}",
              "type": "string"
            },
            {
              "id": "active",
              "name": "active",
              "value": "={{ $jmespath($json, 'body.active') }}",
              "type": "boolean"
            },
            {
              "id": "currentTimeMs",
              "name": "currentTimeMs",
              "value": "={{ $now.toMillis() }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "f3b3028c-5056-4392-9236-89aba7391a43",
      "name": "Extract Heartbeat Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -780,
        -60
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1sGSFYOdX13Ja7VdJyd45cGNYVvBL24NgDEPNoLc6n5M",
          "mode": "list",
          "cachedResultName": "Tracking Sessions",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1sGSFYOdX13Ja7VdJyd45cGNYVvBL24NgDEPNoLc6n5M/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sessions",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1sGSFYOdX13Ja7VdJyd45cGNYVvBL24NgDEPNoLc6n5M/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "sessionId",
              "lookupValue": "={{ $json.sessionId }}"
            }
          ]
        },
        "options": {}
      },
      "id": "828b9ecb-68ea-4cc9-9df3-9e42951a6fbf",
      "name": "Lookup Session",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -780,
        180
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "umrAZGShoRxgB742",
          "name": "bangquoc9-sheet"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "has-results",
              "leftValue": "={{ $input.all().length }}",
              "rightValue": "0",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
      "name": "Check Session Found",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -540,
        180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "session-found",
              "leftValue": "={{ $json.sessionId }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            },
            {
              "id": "not-used",
              "leftValue": "={{ $json.used }}",
              "rightValue": "=false",
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "08fcf761-5f6b-4183-a12e-04b78070350a",
      "name": "Check Session Valid",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -20,
        40
      ]
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import time\nfrom datetime import datetime\n\n# Calculate time delta and update accumulated active time\nfor item in _input.all():\n  json = item.json\n  \n  # Get current time (now)\n  current_time_ms = int(time.time() * 1000)\n  \n  # Get data from Google Sheets lookup\n  last_heartbeat_ms = int(json.get('lastHeartbeatMs', current_time_ms))\n  accumulated_active_ms = int(json.get('accumulatedActiveMs', 0))\n  \n  # Get active flag from heartbeat request (passed through from Extract node)\n  active = json.get('active') in [True, 'true']\n  \n  # Calculate delta in milliseconds\n  delta_ms = current_time_ms - last_heartbeat_ms\n  \n  # Only add to accumulated time if active flag is true\n  # This ensures we only count time when user is actually interacting\n  new_accumulated_active_ms = accumulated_active_ms\n  \n  if active == True:\n    # Cap the delta to prevent huge jumps (max 5 minutes per heartbeat)\n    max_delta_ms = 300000  # 5 minutes\n    if delta_ms <= max_delta_ms:\n      new_accumulated_active_ms = accumulated_active_ms + delta_ms\n    # If delta is too large, don't add it (likely network issue or tab was suspended)\n  \n  # Update item with new calculated fields\n  item.json['deltaMs'] = delta_ms\n  item.json['newAccumulatedActiveMs'] = new_accumulated_active_ms\n  item.json['newLastHeartbeatMs'] = current_time_ms\n  item.json['newLastHeartbeat'] = datetime.fromtimestamp(current_time_ms / 1000).isoformat() + 'Z'\n  item.json['newTtlAt'] = datetime.fromtimestamp((current_time_ms + 14400000) / 1000).isoformat() + 'Z'\n\nreturn _input.all()"
      },
      "id": "f40052d6-1fd4-43ea-b24d-0f69ddadb49c",
      "name": "Calculate Delta",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        180,
        -60
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1sGSFYOdX13Ja7VdJyd45cGNYVvBL24NgDEPNoLc6n5M",
          "mode": "list",
          "cachedResultName": "Tracking Sessions",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1sGSFYOdX13Ja7VdJyd45cGNYVvBL24NgDEPNoLc6n5M/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sessions",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1sGSFYOdX13Ja7VdJyd45cGNYVvBL24NgDEPNoLc6n5M/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "sessionId": "={{ $json.sessionId }}",
            "lastHeartbeat": "={{ $json.newLastHeartbeat }}",
            "lastHeartbeatMs": "={{ $json.newLastHeartbeatMs }}",
            "accumulatedActiveMs": "={{ $json.newAccumulatedActiveMs }}",
            "ttlAt": "={{ $json.newTtlAt }}"
          },
          "matchingColumns": [
            "sessionId"
          ],
          "schema": [
            {
              "id": "sessionId",
              "displayName": "sessionId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "docUrl",
              "displayName": "docUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "startTime",
              "displayName": "startTime",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "startTimeMs",
              "displayName": "startTimeMs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lastHeartbeat",
              "displayName": "lastHeartbeat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "lastHeartbeatMs",
              "displayName": "lastHeartbeatMs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "accumulatedActiveMs",
              "displayName": "accumulatedActiveMs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "used",
              "displayName": "used",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ttlAt",
              "displayName": "ttlAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "endTime",
              "displayName": "endTime",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "endTimeMs",
              "displayName": "endTimeMs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "reason",
              "displayName": "reason",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "activeSec",
              "displayName": "activeSec",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "activeMinutes",
              "displayName": "activeMinutes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "totalElapsedSec",
              "displayName": "totalElapsedSec",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "activityPercentage",
              "displayName": "activityPercentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "finalAccumulatedActiveMs",
              "displayName": "finalAccumulatedActiveMs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "f2de3f2c-f14b-4866-b647-1da70c0cfcf8",
      "name": "Update Session",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        380,
        -60
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "umrAZGShoRxgB742",
          "name": "bangquoc9-sheet"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"status\": \"ok\", \"sessionId\": $json.sessionId, \"deltaMs\": $json.deltaMs, \"accumulatedActiveMs\": $json.newAccumulatedActiveMs } }}",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Allow-Methods",
                "value": "POST, OPTIONS"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "value": "Content-Type"
              }
            ]
          }
        }
      },
      "id": "3dcee08e-d98d-407c-a184-764152870e20",
      "name": "Respond Heartbeat OK",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        580,
        -60
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"status\": \"error\", \"error_code\": \"SESSION_NOT_FOUND\", \"message\": \"Session not found\" } }}",
        "options": {
          "responseCode": 404,
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Allow-Methods",
                "value": "POST, OPTIONS"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "value": "Content-Type"
              }
            ]
          }
        }
      },
      "id": "e1f2g3h4-i5j6-7890-klmn-op1234567890",
      "name": "Respond Session Not Found",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -340,
        320
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"status\": \"error\", \"error_code\": \"SESSION_INVALID\", \"message\": \"Session already used or invalid\" } }}",
        "options": {
          "responseCode": 400,
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Allow-Methods",
                "value": "POST, OPTIONS"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "value": "Content-Type"
              }
            ]
          }
        }
      },
      "id": "0b59ef51-c02d-4c39-bba3-3be03fb857ae",
      "name": "Respond Session Invalid",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        180,
        140
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -340,
        40
      ],
      "id": "6c53712a-22f3-43ea-8aee-d3fdeb82e1d6",
      "name": "Merge"
    }
  ],
  "connections": {
    "Webhook Heartbeat": {
      "main": [
        [
          {
            "node": "Extract Heartbeat Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Heartbeat Data": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "Lookup Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lookup Session": {
      "main": [
        [
          {
            "node": "Check Session Found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Session Found": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Respond Session Not Found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Session Valid": {
      "main": [
        [
          {
            "node": "Calculate Delta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond Session Invalid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate Delta": {
      "main": [
        [
          {
            "node": "Update Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Session": {
      "main": [
        [
          {
            "node": "Respond Heartbeat OK",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Check Session Valid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6b9abc2a99c69957c091b96c25d48690c3bbd89cffa33ca8d5bfc1f6b14755b1"
  }
}
